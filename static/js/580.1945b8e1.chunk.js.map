{"version":3,"file":"static/js/580.1945b8e1.chunk.js","mappings":"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","sources":["chapter/Portfolio.tsx","components/ChapterContainer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport ChapterContainer from \"../components/ChapterContainer.tsx\";\r\nimport styled from \"styled-components\";\r\nimport color from \"../color\";\r\n\r\n// 프로젝트 데이터의 타입 정의\r\ninterface ProjectType {\r\n  title: string;\r\n  duration: string;\r\n  introduction: string;\r\n  explanation: string;\r\n  role: string;\r\n  tech: string[];\r\n  contribution: string;\r\n  github: string;\r\n  images: string[];\r\n}\r\n\r\nconst projects: ProjectType[] = [\r\n  {\r\n    title: \"HUMAIND: 인공지능 윤리 평가 시스템\",\r\n    duration: \"2024. 09 ~ 2024. 11 (4人)\",\r\n    introduction: \"내가 사용하는 인공지능이 과연 윤리적일까?\",\r\n    explanation: `인공지능의 발전과 함께 인공지능이 윤리적인지에 대해서 많은 의구심이 들고 있습니다.`,\r\n    role: \"Web Design & FE\",\r\n    tech: [\"React\"],\r\n    contribution: \"45%\",\r\n    github: \"https://github.com/patisiel-study/ELSA-frontend\",\r\n    images: [\r\n      \"HUMAIND_main.png\",\r\n      \"HUMAIND_info.png\",\r\n      \"HUMAIND_testHub.png\",\r\n      \"HUMAIND_test.png\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"내 케이크를 꾸며줘!\",\r\n    duration: \"2024. 03 ~ 2024. 06 (4人)\",\r\n    introduction: \"특별한 생일 편지를 보내줄 수는 없을까?\",\r\n    explanation: `생일을 조금 더 뜻깊게 보내고 싶다는 마음에서 시작한 프로젝트입니다.\r\n    생일이 한달 남은 친구가 케이크 모양의 편지함을 만들면,\r\n    친구가 케이크에 귀여운 촛불 모양의 편지를 작성할 수 있습니다.`,\r\n    role: \"Web Design & FE\",\r\n    tech: [\"React\"],\r\n    contribution: \"25%\",\r\n    github: \"https://github.com/patisiel-study/decorate-my-cake-frontend\",\r\n    images: [\r\n      \"DecorateMyCake_main.png\",\r\n      \"DecorateMyCake_selectCake.png\",\r\n      \"DecorateMyCake_setCake.png\",\r\n    ],\r\n  },\r\n];\r\n\r\nconst Portfolio: React.FC = () => {\r\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\r\n  const [imageIndexes, setImageIndexes] = useState<number[]>(\r\n    projects.map(() => 0) // 각 프로젝트에 대해 이미지 인덱스를 초기화\r\n  );\r\n  const boxRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    const handleWheel = (e: WheelEvent) => {\r\n      if (boxRef.current && boxRef.current.contains(e.target as Node)) {\r\n        e.preventDefault();\r\n        if (e.deltaY > 0) {\r\n          setCurrentIndex((prevIndex) => (prevIndex + 1) % projects.length);\r\n        } else {\r\n          setCurrentIndex(\r\n            (prevIndex) => (prevIndex - 1 + projects.length) % projects.length\r\n          );\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"wheel\", handleWheel, { passive: false });\r\n\r\n    return () => {\r\n      window.removeEventListener(\"wheel\", handleWheel);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setImageIndexes((prevIndexes) =>\r\n        prevIndexes.map((index, projectIndex) => {\r\n          const projectImages = projects[projectIndex].images;\r\n          return (index + 1) % projectImages.length;\r\n        })\r\n      );\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleImageChange = (\r\n    projectIndex: number,\r\n    direction: \"prev\" | \"next\"\r\n  ) => {\r\n    setImageIndexes((prevIndexes) => {\r\n      const newIndexes = [...prevIndexes];\r\n      const projectImages = projects[projectIndex].images;\r\n      const currentImageIndex = newIndexes[projectIndex];\r\n\r\n      if (direction === \"prev\") {\r\n        newIndexes[projectIndex] =\r\n          (currentImageIndex - 1 + projectImages.length) % projectImages.length;\r\n      } else if (direction === \"next\") {\r\n        newIndexes[projectIndex] =\r\n          (currentImageIndex + 1) % projectImages.length;\r\n      }\r\n\r\n      return newIndexes;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ChapterContainer>\r\n      <Box ref={boxRef}>\r\n        <Pagination>\r\n          {projects.map((_, index) => (\r\n            <PagingButton\r\n              key={index}\r\n              $isActive={index === currentIndex}\r\n              onClick={() => setCurrentIndex(index)}\r\n            />\r\n          ))}\r\n        </Pagination>\r\n        <SliderContainer>\r\n          <SliderWrapper\r\n            style={{ transform: `translateX(-${currentIndex * 100}%)` }}\r\n          >\r\n            {projects.map((project, projectIndex) => (\r\n              <Project key={projectIndex}>\r\n                <ProjectContent>\r\n                  <ProjectTitle>{project.title}</ProjectTitle>\r\n                  <ProjectDuration>{project.duration}</ProjectDuration>\r\n                  <ProjectIntroduction>\r\n                    {project.introduction}\r\n                  </ProjectIntroduction>\r\n                  <ProjectExplanation>\r\n                    {project.explanation}\r\n                    <br />\r\n                    <br />\r\n                    <br /># 프로젝트 내 역할 : {project.role}\r\n                    <br /># 프로젝트 사용 기술 :{\" \"}\r\n                    {project.tech.map((tech, index) => (\r\n                      <Tag key={index}>{tech}</Tag>\r\n                    ))}\r\n                    <br /># 프로젝트 기여도 : {project.contribution}\r\n                  </ProjectExplanation>\r\n                  <GithubLink href={project.github} target=\"_blank\">\r\n                    Github↗\r\n                  </GithubLink>\r\n                </ProjectContent>\r\n                <ProjectImgContainer>\r\n                  <Icon\r\n                    src=\"../img/next.png\"\r\n                    alt=\"이전\"\r\n                    onClick={() => handleImageChange(projectIndex, \"prev\")}\r\n                  />\r\n                  <ProjectImg\r\n                    src={`../img/${project.images[imageIndexes[projectIndex]]}`}\r\n                    alt=\"프로젝트 이미지\"\r\n                  />\r\n                  <Icon\r\n                    src=\"../img/next.png\"\r\n                    alt=\"다음\"\r\n                    onClick={() => handleImageChange(projectIndex, \"next\")}\r\n                  />\r\n                </ProjectImgContainer>\r\n              </Project>\r\n            ))}\r\n          </SliderWrapper>\r\n        </SliderContainer>\r\n      </Box>\r\n    </ChapterContainer>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n\r\nconst Box = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 40rem;\r\n  width: 70%;\r\n  margin-top: 3rem;\r\n  padding: 3rem 3rem 3rem 4rem;\r\n  box-sizing: border-box;\r\n  background-color: white;\r\n  border-radius: 2rem;\r\n  box-shadow: 0.2rem 0.3rem 0.1rem ${({ theme }) => theme.shadow};\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 80%;\r\n    height: auto;\r\n    padding: 2rem;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nconst Pagination = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 5rem;\r\n`;\r\n\r\nconst PagingButton = styled.div<{ $isActive: boolean }>`\r\n  width: 1rem;\r\n  height: 1rem;\r\n  background-color: ${({ $isActive }) =>\r\n    $isActive ? \"#7CAEFF\" : color.light.header};\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 0.8rem;\r\n    height: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst SliderContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst SliderWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  transition: transform 0.5s ease;\r\n`;\r\n\r\nconst Project = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  min-width: 100%;\r\n\r\n  @media (max-width: 1024px) {\r\n    flex-direction: column-reverse;\r\n  }\r\n`;\r\n\r\nconst ProjectContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ProjectTitle = styled.h2`\r\n  margin-bottom: 0.1rem;\r\n`;\r\n\r\nconst ProjectDuration = styled.p`\r\n  margin: 0;\r\n  color: ${color.light.shadow};\r\n`;\r\n\r\nconst ProjectIntroduction = styled.h3`\r\n  margin-top: 2rem;\r\n`;\r\n\r\nconst ProjectExplanation = styled.p`\r\n  margin: 0;\r\n`;\r\n\r\nconst Tag = styled.span`\r\n  margin-right: 0.5rem;\r\n  padding: 0.1rem 0.5rem;\r\n  background-color: #61dafb;\r\n  border-radius: 0.5rem;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst GithubLink = styled.a`\r\n  margin-top: 1rem;\r\n  color: ${color.light.shadow};\r\n  text-decoration: underline ${color.light.shadow};\r\n`;\r\n\r\nconst ProjectImgContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-left: 2rem;\r\n\r\n  @media (max-width: 1024px) {\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\nconst ProjectImg = styled.img`\r\n  width: 25rem;\r\n  height: 25rem;\r\n  margin: 1rem;\r\n  background-color: ${color.light.background};\r\n  border-radius: 20%;\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 70%;\r\n    height: auto;\r\n    border-radius: 10%;\r\n  }\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  cursor: pointer;\r\n  &:first-child {\r\n    transform: scaleX(-1);\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 1rem;\r\n    height: 1rem;\r\n  }\r\n`;\r\n","import React, { ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface ChapterContainerProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst ChapterContainer: React.FC<ChapterContainerProps> = ({ children }) => {\r\n  return <StyledChapterContainer>{children}</StyledChapterContainer>;\r\n};\r\n\r\nexport default ChapterContainer;\r\n\r\nconst StyledChapterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 100vh;\r\n`;\r\n"],"names":["projects","title","duration","introduction","explanation","role","tech","contribution","github","images","Portfolio","currentIndex","setCurrentIndex","useState","imageIndexes","setImageIndexes","map","boxRef","useRef","useEffect","handleWheel","e","current","contains","target","preventDefault","deltaY","prevIndex","length","window","addEventListener","passive","removeEventListener","interval","setInterval","prevIndexes","index","projectIndex","clearInterval","handleImageChange","direction","newIndexes","projectImages","currentImageIndex","_jsx","ChapterContainer","children","_jsxs","Box","ref","Pagination","_","PagingButton","$isActive","onClick","SliderContainer","SliderWrapper","style","transform","concat","project","Project","ProjectContent","ProjectTitle","ProjectDuration","ProjectIntroduction","ProjectExplanation","Tag","GithubLink","href","ProjectImgContainer","Icon","src","alt","ProjectImg","styled","div","_templateObject","_taggedTemplateLiteral","_ref","theme","shadow","_templateObject2","_templateObject3","_ref2","color","light","header","_templateObject4","_templateObject5","_templateObject6","_templateObject7","h2","_templateObject8","p","_templateObject9","h3","_templateObject10","_templateObject11","span","_templateObject12","a","_templateObject13","_templateObject14","img","_templateObject15","background","_templateObject16","StyledChapterContainer"],"sourceRoot":""}