{"version":3,"file":"static/js/77.cbe191d0.chunk.js","mappings":"yLAAO,MAAMA,EAAQ,CACjBC,QAAS,2BCDAC,EAAiBA,CAACC,EAAQC,EAAWC,KAC9C,IAAKF,EACD,KAAM,iFAEV,IAAKC,EACD,KAAM,wEAEV,IAAKC,EACD,KAAM,mFAEV,OAAO,CAAI,ECVR,MAAMC,EACTC,WAAAA,CAAYC,GACRC,KAAKC,OAASF,EAAaE,OAC3BD,KAAKE,KAAOH,EAAaI,YAC7B,ECFG,MAAMC,EAAW,SAACC,EAAKC,GAAuB,IAAjBC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3C,OAAO,IAAIG,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,iBAAiB,QAAQC,IAAgB,IAAf,OAAEC,GAAQD,EACpC,MAAME,EAAiB,IAAItB,EAAsBqB,GACnB,MAA1BC,EAAelB,QAA0C,OAAxBkB,EAAejB,KAChDU,EAAQO,GAGRN,EAAOM,EACX,IAEJL,EAAIE,iBAAiB,SAASI,IAAgB,IAAf,OAAEF,GAAQE,EACrCP,EAAO,IAAIhB,EAAsBqB,GAAQ,IAE7CJ,EAAIO,KAAK,OAAQ9B,EAAMC,QAAUa,GAAK,GACtCiB,OAAOC,KAAKhB,GAASiB,SAASC,IAC1BX,EAAIY,iBAAiBD,EAAKlB,EAAQkB,GAAK,IAE3CX,EAAIa,KAAKrB,EAAK,GAEtB,ECnBA,ECoBwBsB,CAACjC,EAAWC,EAAYiC,EAAMnC,KAClD,MAAMoC,EAAMpC,GAAUH,EAAMwC,QACtBC,EAvBYH,KAClB,IAAIG,EAOJ,GALIA,EADgB,kBAATH,EACOI,SAASC,cAAcL,GAGvBA,GAEbG,GAAwC,SAAzBA,EAAYG,SAC5B,KAAM,0FAEV,OAAOH,CAAW,EAYEI,CAAaP,GACjCpC,EAAeqC,EAAKnC,EAAWC,GAC/B,MAAMyC,EAAW,IAAIC,SAASN,GAK9B,OAJAK,EAASE,OAAO,cAAe,SAC/BF,EAASE,OAAO,aAAc5C,GAC9B0C,EAASE,OAAO,cAAe3C,GAC/ByC,EAASE,OAAO,UAAWT,GACpB1B,EAAS,4BAA6BiC,EAAS,E,iCC5B1D,MA2EA,EA3E0BG,KACxB,MAAMX,GAAOY,EAAAA,EAAAA,QAA+B,OACrCxC,EAAQyC,IAAaC,EAAAA,EAAAA,UAAiB,IA0B7C,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CAAAC,UACfC,EAAAA,EAAAA,MAACC,EAAQ,CAAAF,SAAA,EACPC,EAAAA,EAAAA,MAACE,EAAmB,CAAAH,SAAA,EAClBF,EAAAA,EAAAA,KAACM,EAAK,CAAAJ,SAAC,aACPC,EAAAA,EAAAA,MAACI,EAAW,CAAAL,SAAA,CAAC,yEAEXF,EAAAA,EAAAA,KAAA,SAAM,yEAIVG,EAAAA,EAAAA,MAACK,EAAI,CAACC,IAAKxB,EAAMyB,SAnCJC,IACjBA,EAAEC,iBAEG3B,EAAK4B,SAEVC,EAEI,kBACA,mBACA7B,EAAK4B,QACL,qBAEDE,MACEC,IACCC,QAAQC,IAAIF,EAAO1D,MACnBwC,EAAU,oFAAmB,IAE9BqB,IACCF,QAAQC,IAAIC,EAAM7D,MAClBwC,EAAU,0IAAiC,GAE9C,EAcsCI,SAAA,EACnCC,EAAAA,EAAAA,MAACiB,EAAK,CAAAlB,SAAA,CAAC,6BAELF,EAAAA,EAAAA,KAACqB,EAAK,CACJC,KAAK,OACLC,KAAK,YACLC,YAAY,4DACZC,UAAQ,QAGZtB,EAAAA,EAAAA,MAACiB,EAAK,CAAAlB,SAAA,CAAC,gDAELF,EAAAA,EAAAA,KAACqB,EAAK,CACJC,KAAK,QACLC,KAAK,WACLC,YAAY,oBACZC,UAAQ,QAGZtB,EAAAA,EAAAA,MAACiB,EAAK,CAAAlB,SAAA,CAAC,gBAELF,EAAAA,EAAAA,KAAC0B,EAAQ,CACPH,KAAK,UACLI,KAAM,EACNH,YAAY,4DACZC,UAAQ,QAGZzB,EAAAA,EAAAA,KAAC4B,EAAM,CAACN,KAAK,SAAQpB,SAAC,oCACrB7C,IAAU2C,EAAAA,EAAAA,KAAC6B,EAAM,CAAA3B,SAAE7C,WAGP,EAMjB+C,EAAW0B,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6XAQiB5D,IAAA,IAAC,MAAE6D,GAAO7D,EAAA,OAAK6D,EAAMC,MAAM,IAWjE9B,EAAsByB,EAAAA,GAAOC,IAAGK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iVAkBhC3B,EAAQwB,EAAAA,GAAOO,GAAEC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,uHASjB1B,EAAcuB,EAAAA,GAAOS,EAACC,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,iKAWtBzB,EAAOsB,EAAAA,GAAO7C,KAAIwD,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,sJAWlBb,EAAQU,EAAAA,GAAOY,MAAKC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,2HASpBZ,EAAQS,EAAAA,GAAOc,MAAKC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,+MAapBP,EAAWI,EAAAA,GAAOgB,SAAQC,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,gOAc1BL,EAASE,EAAAA,GAAOkB,OAAMC,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,4RAmBtBJ,EAASC,EAAAA,GAAOoB,EAACC,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,yJ,0ECtMvB,MAIA,EAJ0D5D,IAAmB,IAAlB,SAAE6B,GAAU7B,EACrE,OAAO2B,EAAAA,EAAAA,KAACoD,EAAsB,CAAAlD,SAAEA,GAAkC,EAK9DkD,EAAyBtB,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sI","sources":["../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/sendForm/sendForm.js","chapter/Contact.tsx","components/ChapterContainer.tsx"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React, { useState, useRef } from \"react\";\r\nimport ChapterContainer from \"../components/ChapterContainer.tsx\";\r\nimport styled from \"styled-components\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nconst Contact: React.FC = () => {\r\n  const form = useRef<HTMLFormElement | null>(null);\r\n  const [status, setStatus] = useState<string>(\"\");\r\n\r\n  const sendEmail = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!form.current) return;\r\n\r\n    emailjs\r\n      .sendForm(\r\n        \"service_nd2413g\", // EmailJS Service ID\r\n        \"template_nd2413g\", // EmailJS Template ID\r\n        form.current,\r\n        \"buxVdZ7sf25BA4crZ\" // EmailJS Public Key\r\n      )\r\n      .then(\r\n        (result) => {\r\n          console.log(result.text);\r\n          setStatus(\"메일을 성공적으로 보냈습니다!\");\r\n        },\r\n        (error) => {\r\n          console.log(error.text);\r\n          setStatus(\"메일을 보낼 수 없습니다. 잠시 후 다시 시도해주세요.\");\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <ChapterContainer>\r\n      <Postcard>\r\n        <PostcardInformation>\r\n          <Title>Contact</Title>\r\n          <Explanation>\r\n            제 이메일로 바로 전송되는\r\n            <br />\r\n            컨택 메일 작성란입니다.\r\n          </Explanation>\r\n        </PostcardInformation>\r\n        <Form ref={form} onSubmit={sendEmail}>\r\n          <Label>\r\n            보내는 이\r\n            <Input\r\n              type=\"text\"\r\n              name=\"from_name\"\r\n              placeholder=\"성함을 입력해 주세요.\"\r\n              required\r\n            />\r\n          </Label>\r\n          <Label>\r\n            회신 이메일 주소\r\n            <Input\r\n              type=\"email\"\r\n              name=\"reply_to\"\r\n              placeholder=\"example@gmail.com\"\r\n              required\r\n            />\r\n          </Label>\r\n          <Label>\r\n            내용\r\n            <Textarea\r\n              name=\"message\"\r\n              rows={8}\r\n              placeholder=\"내용을 입력해 주세요.\"\r\n              required\r\n            />\r\n          </Label>\r\n          <Button type=\"submit\">메일 보내기</Button>\r\n          {status && <Status>{status}</Status>}\r\n        </Form>\r\n      </Postcard>\r\n    </ChapterContainer>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n\r\nconst Postcard = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 70%;\r\n  height: 36rem;\r\n  margin-top: 3rem;\r\n  background-color: white;\r\n  box-shadow: 0.1rem 0.2rem 0.2rem 0.1rem ${({ theme }) => theme.shadow};\r\n  padding: 2rem;\r\n  box-sizing: border-box;\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 80%;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nconst PostcardInformation = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 30%;\r\n  height: 30rem;\r\n  padding-right: 5%;\r\n  border-right: 0.1rem solid #ddd;\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 100%;\r\n    height: auto;\r\n    border-right: none;\r\n    border-bottom: 0.1rem solid #ddd;\r\n    padding-right: 0;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin-bottom: 0.5rem;\r\n  font-size: 2rem;\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst Explanation = styled.i`\r\n  margin-bottom: 2rem;\r\n  display: inline-block;\r\n  font-size: 0.8rem;\r\n  color: gray;\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 0.7rem;\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 60%;\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 100%;\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  margin-bottom: 1rem;\r\n  font-weight: bold;\r\n\r\n  @media (max-width: 1024px) {\r\n    margin-bottom: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  margin-top: 0.5rem;\r\n  padding: 0.5rem;\r\n  box-sizing: border-box;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n\r\n  @media (max-width: 1024px) {\r\n    padding: 0.4rem;\r\n  }\r\n`;\r\n\r\nconst Textarea = styled.textarea`\r\n  width: 100%;\r\n  margin-top: 0.5rem;\r\n  padding: 0.5rem;\r\n  box-sizing: border-box;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: none;\r\n\r\n  @media (max-width: 1024px) {\r\n    padding: 0.4rem;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 100px;\r\n  padding: 0.5rem;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #0056b3;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    padding: 0.6rem;\r\n  }\r\n`;\r\n\r\nconst Status = styled.p`\r\n  margin-top: 1rem;\r\n  color: green;\r\n  font-weight: bold;\r\n\r\n  font-size: 1rem;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n","import React, { ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface ChapterContainerProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst ChapterContainer: React.FC<ChapterContainerProps> = ({ children }) => {\r\n  return <StyledChapterContainer>{children}</StyledChapterContainer>;\r\n};\r\n\r\nexport default ChapterContainer;\r\n\r\nconst StyledChapterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 100vh;\r\n`;\r\n"],"names":["store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","sendForm","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","Contact","useRef","setStatus","useState","_jsx","ChapterContainer","children","_jsxs","Postcard","PostcardInformation","Title","Explanation","Form","ref","onSubmit","e","preventDefault","current","emailjs","then","result","console","log","error","Label","Input","type","name","placeholder","required","Textarea","rows","Button","Status","styled","div","_templateObject","_taggedTemplateLiteral","theme","shadow","_templateObject2","h2","_templateObject3","i","_templateObject4","_templateObject5","label","_templateObject6","input","_templateObject7","textarea","_templateObject8","button","_templateObject9","p","_templateObject10","StyledChapterContainer"],"sourceRoot":""}