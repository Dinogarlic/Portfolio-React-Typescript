{"version":3,"file":"static/js/660.b7a84139.chunk.js","mappings":"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","sources":["chapter/Hello.tsx","components/ChapterContainer.tsx","../node_modules/react-simple-typewriter/src/reducer.ts","../node_modules/react-simple-typewriter/src/hooks/useTypewriter.tsx","../node_modules/react-simple-typewriter/node_modules/style-inject/dist/style-inject.es.js","../node_modules/react-simple-typewriter/src/components/Cursor.tsx","../node_modules/react-simple-typewriter/src/components/Typewriter.tsx"],"sourcesContent":["import React from \"react\";\r\nimport ChapterContainer from \"../components/ChapterContainer.tsx\";\r\nimport styled from \"styled-components\";\r\nimport { Typewriter } from \"react-simple-typewriter\";\r\n\r\nconst Hello: React.FC = () => {\r\n  return (\r\n    <ChapterContainer>\r\n      <Introduction>\r\n        <Typewriter\r\n          words={[\"안녕하세요!👋\\n주니어 프론트엔드 개발자 김동희입니다.\"]}\r\n          loop={100} // 반복 횟수 (1로 설정하면 한 번만 실행)\r\n          cursor\r\n          cursorStyle=\"|\"\r\n          typeSpeed={50} // 타이핑 속도\r\n          deleteSpeed={50} // 삭제 속도\r\n          delaySpeed={1000} // 다음 문장으로 넘어가는 대기 시간\r\n        />\r\n      </Introduction>\r\n    </ChapterContainer>\r\n  );\r\n};\r\n\r\nexport default Hello;\r\n\r\nconst Introduction = styled.h2`\r\n  display: inline-block;\r\n  max-width: 70%;\r\n  color: ${({ theme }) => theme.text};\r\n  font-family: \"LeeSeoyun\", sans-serif;\r\n  font-size: 2.5rem;\r\n  font-weight: normal;\r\n  text-align: center;\r\n  line-height: 1.2;\r\n  word-break: keep-all;\r\n`;\r\n","import React, { ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface ChapterContainerProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst ChapterContainer: React.FC<ChapterContainerProps> = ({ children }) => {\r\n  return <StyledChapterContainer>{children}</StyledChapterContainer>;\r\n};\r\n\r\nexport default ChapterContainer;\r\n\r\nconst StyledChapterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 100vh;\r\n`;\r\n","export type State = {\r\n  speed: number\r\n  text: string\r\n  count: number\r\n}\r\n\r\nexport type Action =\r\n  | { type: 'DELAY'; payload: number }\r\n  | { type: 'TYPE'; payload: string; speed: number }\r\n  | { type: 'DELETE'; payload: string; speed: number }\r\n  | { type: 'COUNT' }\r\n\r\nexport function reducer(state: State, action: Action): State {\r\n  switch (action.type) {\r\n    case 'TYPE':\r\n      return {\r\n        ...state,\r\n        speed: action.speed,\r\n        text: action.payload?.substring(0, state.text.length + 1)\r\n      }\r\n    case 'DELAY':\r\n      return {\r\n        ...state,\r\n        speed: action.payload\r\n      }\r\n    case 'DELETE':\r\n      return {\r\n        ...state,\r\n        speed: action.speed,\r\n        text: action.payload?.substring(0, state.text.length - 1)\r\n      }\r\n    case 'COUNT':\r\n      return {\r\n        ...state,\r\n        count: state.count + 1\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { useCallback, useEffect, useRef, useReducer } from 'react'\r\nimport { reducer } from '../reducer'\r\n\r\nexport type TypewriterProps = {\r\n  /** Callback Function that is triggered when loops are completed. available if loop is > `0` */\r\n  onLoopDone?: () => void\r\n  /** Callback Function that is triggered while typing with `typed` words count passed */\r\n  onType?: (count: number) => void\r\n  /** Callback Function that is triggered while deleting */\r\n  onDelete?: () => void\r\n  /** Callback Function that is triggered on typing delay */\r\n  onDelay?: () => void\r\n  /** Array of strings holding the words */\r\n  words: string[]\r\n  /** Control how many times to run. `0 | false` to run infinitely */\r\n  loop?: number | boolean\r\n  /** Character typing speed in Milliseconds */\r\n  typeSpeed?: number\r\n  /** Character deleting speed in Milliseconds */\r\n  deleteSpeed?: number\r\n  /** Delay time between the words in Milliseconds */\r\n  delaySpeed?: number\r\n}\r\n\r\nexport type TypewriterHelper = {\r\n  /** `true` if currently typing */\r\n  isType: boolean\r\n  /** `true` if on delay */\r\n  isDelay: boolean\r\n  /** `true` if currently deleting */\r\n  isDelete: boolean\r\n  /** `true` if all loops are done */\r\n  isDone: boolean\r\n}\r\n\r\nexport const useTypewriter = ({\r\n  words = ['Hello World!', 'This is', 'a simple Typewriter'],\r\n  loop = 1,\r\n  typeSpeed = 80,\r\n  deleteSpeed = 50,\r\n  delaySpeed = 1500,\r\n  onLoopDone,\r\n  onType,\r\n  onDelete,\r\n  onDelay\r\n}: TypewriterProps): [string, TypewriterHelper] => {\r\n  const [{ speed, text, count }, dispatch] = useReducer(reducer, {\r\n    speed: typeSpeed,\r\n    text: '',\r\n    count: 0\r\n  })\r\n\r\n  // Refs\r\n  const loops = useRef(0)\r\n  const isDone = useRef(false)\r\n  const isDelete = useRef(false)\r\n  const isType = useRef(false)\r\n  const isDelay = useRef(false)\r\n\r\n  const handleTyping = useCallback(() => {\r\n    const index = count % words.length\r\n    const fullWord = words[index]\r\n\r\n    if (!isDelete.current) {\r\n      dispatch({ type: 'TYPE', payload: fullWord, speed: typeSpeed })\r\n      isType.current = true\r\n\r\n      if (text === fullWord) {\r\n        dispatch({ type: 'DELAY', payload: delaySpeed })\r\n        isType.current = false\r\n        isDelay.current = true\r\n\r\n        setTimeout(() => {\r\n          isDelay.current = false\r\n          isDelete.current = true\r\n        }, delaySpeed)\r\n\r\n        if (loop > 0) {\r\n          loops.current += 1\r\n          if (loops.current / words.length === loop) {\r\n            isDelay.current = false\r\n            isDone.current = true\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      dispatch({ type: 'DELETE', payload: fullWord, speed: deleteSpeed })\r\n      if (text === '') {\r\n        isDelete.current = false\r\n        dispatch({ type: 'COUNT' })\r\n      }\r\n    }\r\n\r\n    if (isType.current) {\r\n      if (onType) onType(loops.current)\r\n    }\r\n\r\n    if (isDelete.current) {\r\n      if (onDelete) onDelete()\r\n    }\r\n\r\n    if (isDelay.current) {\r\n      if (onDelay) onDelay()\r\n    }\r\n  }, [\r\n    count,\r\n    delaySpeed,\r\n    deleteSpeed,\r\n    loop,\r\n    typeSpeed,\r\n    words,\r\n    text,\r\n    onType,\r\n    onDelete,\r\n    onDelay\r\n  ])\r\n\r\n  useEffect(() => {\r\n    const typing = setTimeout(handleTyping, speed)\r\n\r\n    if (isDone.current) clearTimeout(typing)\r\n\r\n    return () => clearTimeout(typing)\r\n  }, [handleTyping, speed])\r\n\r\n  useEffect(() => {\r\n    if (!onLoopDone) return\r\n\r\n    if (isDone.current) {\r\n      onLoopDone()\r\n    }\r\n  }, [onLoopDone])\r\n\r\n  return [\r\n    text,\r\n    {\r\n      isType: isType.current,\r\n      isDelay: isDelay.current,\r\n      isDelete: isDelete.current,\r\n      isDone: isDone.current\r\n    }\r\n  ]\r\n}\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { ReactNode, memo } from 'react'\r\nimport styles from '../styles.module.css'\r\n\r\nexport type CursorProps = {\r\n  /** Enable cursor blinking animation */\r\n  cursorBlinking?: boolean\r\n  /** Change cursor style */\r\n  cursorStyle?: ReactNode\r\n  /** Change cursor color */\r\n  cursorColor?: string\r\n}\r\n\r\nconst MemoizedCursor = ({\r\n  cursorBlinking = true,\r\n  cursorStyle = '|',\r\n  cursorColor = 'inherit'\r\n}: CursorProps): JSX.Element => {\r\n  return (\r\n    <span\r\n      style={{ color: cursorColor }}\r\n      className={`${styles.blinkingCursor} ${\r\n        cursorBlinking ? styles.blinking : ''\r\n      }`}\r\n    >\r\n      {cursorStyle}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport const Cursor = memo(MemoizedCursor)\r\n","import { TypewriterProps, useTypewriter } from '../hooks/useTypewriter'\r\nimport { Cursor, CursorProps } from './Cursor'\r\n\r\ntype ComponentProps = {\r\n  /** Show / Hide the cursor */\r\n  cursor?: boolean\r\n} & TypewriterProps &\r\n  CursorProps\r\n\r\n/**\r\n * A Simple React Component for adding a nice Typewriter effect to your project.\r\n */\r\nexport const Typewriter = ({\r\n  words = ['Hello World!', 'This is', 'a simple Typewriter'],\r\n  loop = 1,\r\n  typeSpeed = 80,\r\n  deleteSpeed = 50,\r\n  delaySpeed = 1500,\r\n  cursor = false,\r\n  cursorStyle = '|',\r\n  cursorColor = 'inherit',\r\n  cursorBlinking = true,\r\n  onLoopDone,\r\n  onType,\r\n  onDelay,\r\n  onDelete\r\n}: ComponentProps): JSX.Element => {\r\n  const [text] = useTypewriter({\r\n    words,\r\n    loop,\r\n    typeSpeed,\r\n    deleteSpeed,\r\n    delaySpeed,\r\n    onLoopDone,\r\n    onType,\r\n    onDelay,\r\n    onDelete\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <span>{text}</span>\r\n      {cursor && (\r\n        <Cursor\r\n          cursorStyle={cursorStyle}\r\n          cursorColor={cursorColor}\r\n          cursorBlinking={cursorBlinking}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n"],"names":["Hello","_jsx","ChapterContainer","children","Introduction","Typewriter","words","loop","cursor","cursorStyle","typeSpeed","deleteSpeed","delaySpeed","styled","h2","_templateObject","_taggedTemplateLiteral","_ref","theme","text","StyledChapterContainer","div","o","e","t","n","type","r","speed","payload","substring","length","count","i","s","u","l","c","d","a","p","y","onLoopDone","f","onType","v","onDelete","m","onDelay","h","useReducer","T","g","_","x","D","C","useRef","E","S","b","k","w","useCallback","current","setTimeout","useEffect","clearTimeout","isType","isDelay","isDelete","isDone","insertAt","document","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","memo","cursorBlinking","cursorColor","jsx","style","color","className","concat","exports","jsxs","Fragment"],"sourceRoot":""}